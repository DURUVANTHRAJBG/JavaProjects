package Project;

import java.util.Scanner;

public class TicTacToe {

	  private static char[][] board = new char[3][3];
	    private static char currentPlayer = 'X';

	    public static void main(String[] args) {
	        initializeBoard();
	        displayBoard();

	        boolean gameOver = false;
	        int moves = 0;

	        while (!gameOver) {
	            int[] move = getPlayerMove();
	            int row = move[0];
	            int col = move[1];

	            if (isValidMove(row, col)) {
	                board[row][col] = currentPlayer;
	                moves++;
	                displayBoard();
	                gameOver = isGameOver(row, col);
	                currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
	            } else {
	                System.out.println("Invalid move. Try again.");
	            }

	            if (moves == 9 && !gameOver) {
	                System.out.println("It's a draw!");
	                break;
	            }
	        }
	    }

	    private static void initializeBoard() {
	        for (int row = 0; row < 3; row++) {
	            for (int col = 0; col < 3; col++) {
	                board[row][col] = ' ';
	            }
	        }
	    }

	    private static void displayBoard() {
	        System.out.println("-------------");
	        for (int row = 0; row < 3; row++) {
	            System.out.print("| ");
	            for (int col = 0; col < 3; col++) {
	                System.out.print(board[row][col] + " | ");
	            }
	            System.out.println("\n-------------");
	        }
	    }

	    private static int[] getPlayerMove() {
	        Scanner scanner = new Scanner(System.in);
	        int[] move = new int[2];

	        System.out.print("Player " + currentPlayer + ", enter your move (row and column): ");
	        move[0] = scanner.nextInt();
	        move[1] = scanner.nextInt();

	        return move;
	    }

	    private static boolean isValidMove(int row, int col) {
	        return row >= 0 && row < 3 && col >= 0 && col < 3 && board[row][col] == ' ';
	    }

	    private static boolean isGameOver(int row, int col) {
	        return checkRow(row) || checkColumn(col) || checkDiagonals() || checkAntiDiagonals();
	    }

	    private static boolean checkRow(int row) {
	        return board[row][0] == currentPlayer && board[row][1] == currentPlayer && board[row][2] == currentPlayer;
	    }

	    private static boolean checkColumn(int col) {
	        return board[0][col] == currentPlayer && board[1][col] == currentPlayer && board[2][col] == currentPlayer;
	    }

	    private static boolean checkDiagonals() {
	        return board[0][0] == currentPlayer && board[1][1] == currentPlayer && board[2][2] == currentPlayer;
	    }

	    private static boolean checkAntiDiagonals() {
	        return board[0][2] == currentPlayer && board[1][1] == currentPlayer && board[2][0] == currentPlayer;
	    }
	
}
